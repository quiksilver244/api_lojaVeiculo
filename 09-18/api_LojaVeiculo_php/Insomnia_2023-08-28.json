{"_type":"export","__export_format":4,"__export_date":"2023-08-28T14:22:36.522Z","__export_source":"insomnia.desktop.app:v2023.4.0","resources":[{"_id":"req_a13e63b0d37b4fba9e6a4d6d68191c42","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693230236851,"created":1686056028621,"url":"http://lojaveiculo.local/veiculo/11","name":"consultar por Id","description":"api/veiculo","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"modelo\": \"Cruze LTZ\",\n\t\t\"ano_fabricacao\": \"2021\",\n\t\t\"ano_modelo\": \"2021\",\n\t\t\"cor\": \"Azul\",\n\t\t\"num_portas\": \"4\",\n\t\t\"foto\": \"foto_cruze.png\",\n\t\t\"categoria_id\": \"1\",\n\t\t\"montadora_id\": \"5\",\n\t\t\"tipo_cambio\": \"Automático\",\n\t\t\"tipo_direcao\": \"Elétrica\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1693230126356.625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_da0f0a8b606c4c84bca2d0e1763ee067","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1693230857183,"created":1693230082724,"name":"Veículo","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1693230228870.5,"_type":"request_group"},{"_id":"wrk_92ea67f42d1b4825b5340f05e817cd55","parentId":null,"modified":1686783194273,"created":1686056028610,"name":"New Document","description":"# Api back-end em PHP\n\nApi back-end em PHP, modelada em MVC, que permite requisições REST.\n\nEsta API fornece controle ao banco de dados, permitindo a manipulação das tabelas Montadoras, Veículos e Categorias.\n\nModelada no padrão REST toda a requisição e resposta são realizadas através do protocolo JSON, via métodos GET, POST, PUT e DELETE.\n","scope":"design","_type":"workspace"},{"_id":"req_62ab10ea04ad40739d86a14283403939","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693230246662,"created":1686783503766,"url":"http://lojaveiculo.local/veiculo/modelo/gol","name":"consultar por modelo","description":"http://lojaveiculo.local/veiculo/modelo/nome_procurado","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230126355.8438,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_68fdc4cdab6a445b9b3cbea11bfaee6f","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693230214756,"created":1687995022854,"url":"http://lojaveiculo.local/veiculo/11","name":"alterar","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"modelo\": \"Cruze LTZ 1.5 Turbo\",\n\t\t\"ano_fabricacao\": \"2021\",\n\t\t\"ano_modelo\": \"2021\",\n\t\t\"cor\": \"Azul\",\n\t\t\"num_portas\": \"4\",\n\t\t\"foto\": \"foto_cruze.png\",\n\t\t\"categoria_id\": \"1\",\n\t\t\"montadora_id\": \"5\",\n\t\t\"tipo_cambio\": \"Automático\",\n\t\t\"tipo_direcao\": \"Elétrica\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1693230126316,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c34d6b9003714490921e8ec27d4eb761","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693230235645,"created":1688657126308,"url":"http://lojaveiculo.local/veiculo/","name":"cadastrar","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n    \"modelo\": \"Passat\",\n    \"ano_fabricacao\": \"2021\",\n    \"ano_modelo\": \"2022\",\n    \"cor\": \"Preto\",\n    \"num_portas\": \"4\",\n    \"foto\": \"passat_golf_var.png\",\n    \"categoria_id\": \"1\",\n    \"montadora_id\": \"1\",\n    \"tipo_cambio\": \"Automático\",\n    \"tipo_direcao\": \"Elétrica\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1693230126359.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_654503593a7d4004a87e79b583022c6b","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693230244521,"created":1693225768573,"url":"http://lojaveiculo.local/veiculo/","name":"consultar todos","description":"http://lojaveiculo.local/veiculo/modelo/nome_procurado","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230126355.0625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2f2548ef7a074778bb4e49e503c45228","parentId":"fld_da0f0a8b606c4c84bca2d0e1763ee067","modified":1693232272367,"created":1693230719173,"url":"http://lojaveiculo.local/veiculo/19","name":"delete","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230126266,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d7629b7e6cbd438e8b8c984667d42860","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230418703,"created":1693230380076,"url":"http://lojaveiculo.local/categoria/","name":"consultar todos","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230380076,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_a66828d77520472aacd6bf4957e4b7a4","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1693230858375,"created":1693230277586,"name":"Catergoria","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1693230204512.75,"_type":"request_group"},{"_id":"req_274fb144257243fd839c4dd6400c9943","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230497577,"created":1693230488340,"url":"http://lojaveiculo.local/categoria/1","name":"consultar por id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230253217.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4f565f717af84994b8bf5a5b3676d65a","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230590065,"created":1693230549557,"url":"http://lojaveiculo.local/categoria/tipo/ha","name":"consultar por tipo","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230549557,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_131bc0aafff04f3d9a1e759b6100d8cd","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230624279,"created":1693230606527,"url":"http://lojaveiculo.local/categoria/","name":"cadastrar","description":"","method":"POST","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230606527,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7514917d1d92431f8ab9cca9e45f00b8","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230671106,"created":1693230664628,"url":"http://lojaveiculo.local/categoria/1","name":"alterar","description":"","method":"PUT","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230578042,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_40e8f5003b6f4fb1aea49eab8965fae6","parentId":"fld_a66828d77520472aacd6bf4957e4b7a4","modified":1693230688057,"created":1693230685514,"url":"http://lojaveiculo.local/categoria/1","name":"delete","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230563799.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_300b0b84ff554c6da923dc06866b1871","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230840336,"created":1693230765242,"url":"http://lojaveiculo.local/montadora/","name":"consultar todos","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230380076,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_2b1b855c2f694fdf8646d6ee98978bb6","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1693230796070,"created":1693230765234,"name":"Montadora","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1693230180155,"_type":"request_group"},{"_id":"req_72fec6a07750443a85c19d5330f270ec","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230847717,"created":1693230765245,"url":"http://lojaveiculo.local/montadora/1","name":"consultar por id","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230253217.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d00ed11deb0a45818105df6ed3dc6799","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230832385,"created":1693230765249,"url":"http://lojaveiculo.local/montadora/nome/ford","name":"consultar por tipo","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230549557,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_fb1bb64462b24900a28b667f4f34cf08","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230804158,"created":1693230765251,"url":"http://lojaveiculo.local/montadora/","name":"cadastrar","description":"","method":"POST","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230606527,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_0891ff6dbc1b471c8c36c3706dd33de5","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230809954,"created":1693230765253,"url":"http://lojaveiculo.local/montadora/1","name":"alterar","description":"","method":"PUT","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230578042,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7bbf28a85018457aa97a2abc8cc34303","parentId":"fld_2b1b855c2f694fdf8646d6ee98978bb6","modified":1693230814795,"created":1693230765255,"url":"http://lojaveiculo.local/montadora/1","name":"delete","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1693230563799.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_78713b93c1168e9a05439f5dbf2d15298015ffa2","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1686056028614,"created":1686056028614,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1686056028614,"_type":"environment"},{"_id":"jar_78713b93c1168e9a05439f5dbf2d15298015ffa2","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1688657151563,"created":1686056028617,"name":"Default Jar","cookies":[{"key":"ASP.NET_SessionId","value":"kznki2but153cjqphkqdrs55","domain":"siga.cps.sp.gov.br","path":"/","httpOnly":true,"hostOnly":true,"creation":"2023-06-28T23:30:26.730Z","lastAccessed":"2023-06-28T23:30:26.730Z","id":"7334696094544706"},{"key":"PHPSESSID","value":"edvstj5am7g2jeg7jaksih6a80","domain":"etectiete.local","path":"/","hostOnly":true,"creation":"2023-07-06T15:25:29.952Z","lastAccessed":"2023-07-06T15:25:29.952Z","id":"4902613237043354"},{"key":"1P_JAR","value":"2023-07-06-15","expires":"2023-08-05T15:26:11.000Z","domain":"google.com","path":"/","secure":true,"hostOnly":false,"creation":"2023-07-06T15:25:51.563Z","lastAccessed":"2023-07-06T15:25:51.563Z","id":"9640556799883435"},{"key":"AEC","value":"Ad49MVECDFxCjafuyakk7-VwRkUSosPwQLDyQDDyyal1x4ChCqBzDO8LRN4","expires":"2024-01-02T15:26:11.000Z","domain":"google.com","path":"/","secure":true,"httpOnly":true,"extensions":["SameSite=lax"],"hostOnly":false,"creation":"2023-07-06T15:25:51.563Z","lastAccessed":"2023-07-06T15:25:51.563Z","id":"5377671732108515"},{"key":"NID","value":"511=uE0KdaTYmSgyNPvrv-yIC-G4dO_7HGyrnu9Ab2uzZVSQwAWnLE1xHVuL75lcKc3R90DvUHrB0rp77wzd89NTMp7a3l0NI_GhOH3g8W-huGAOjnTCAFOJeoRFQsAMAyKS53OjTX_v42I8CIF4ZMOw2NxDSLSAgaXKg67ZgiDo2hQ","expires":"2024-01-05T15:26:11.000Z","domain":"google.com","path":"/","httpOnly":true,"hostOnly":false,"creation":"2023-07-06T15:25:51.563Z","lastAccessed":"2023-07-06T15:25:51.563Z","id":"7411760999144579"}],"_type":"cookie_jar"},{"_id":"spc_6a407d57edd5486c8552abf365b34588","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1693225587199,"created":1693225587199,"fileName":"lojaveiculo.local","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"uts_bf9eb44d95d04bd19a38e184bc261b9e","parentId":"wrk_92ea67f42d1b4825b5340f05e817cd55","modified":1686056028623,"created":1686056028623,"name":"Example Test Suite","_type":"unit_test_suite"}]}